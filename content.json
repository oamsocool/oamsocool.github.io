{"pages":[{"title":"About","date":"2019-06-23T04:30:17.406Z","path":"about/index.html","text":""},{"title":"Categories","date":"2019-06-23T04:30:17.406Z","path":"categories/index.html","text":""},{"title":"Tags","date":"2019-06-23T04:30:17.407Z","path":"tags/index.html","text":""}],"posts":[{"title":"Awesome Windows Manager","date":"2019-06-23T04:30:17.406Z","path":"wiki/Linux/awesome-wm/awesome/","text":"Awesome锁屏配置锁屏功能在工作环境下比较常用。 推荐一个比较不错的配置教程","tags":[{"name":"firefox","slug":"firefox","permalink":"http://yoursite.com/tags/firefox/"}],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"awesome-wm","slug":"Linux/awesome-wm","permalink":"http://yoursite.com/categories/Linux/awesome-wm/"}]},{"title":"Hello World","date":"2019-06-23T04:30:17.404Z","path":"wiki/Demo/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[],"categories":[{"name":"Demo","slug":"Demo","permalink":"http://yoursite.com/categories/Demo/"}]},{"title":"CLI bash & zsh","date":"2019-03-07T11:14:16.000Z","path":"wiki/Linux/common-tools/cli/","text":"Configuration Of Bashhttps://github.com/junegunn/fzfhttps://www.peterdavehello.org/2013/12/bash-completion/https://github.com/donnemartin/gitsome Configuration Of Zshhttps://github.com/zsh-users/zshhttps://github.com/robbyrussell/oh-my-zshhttps://github.com/zsh-users/zsh-completionshttps://github.com/junegunn/fzfhttps://github.com/makeitjoe/incr.zshhttp://yijiebuyi.com/blog/36955b84c57e338dd8255070b80829bf.htmlhttp://mimosa-pudica.net/zsh-incremental.htmlhttps://github.com/changyuheng/fzhttps://github.com/donnemartin/gitsome Reference awesome shell","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"common-tools","slug":"Linux/common-tools","permalink":"http://yoursite.com/categories/Linux/common-tools/"}]},{"title":"minicom usage","date":"2019-03-07T08:59:41.000Z","path":"wiki/Linux/common-tools/minicom/","text":"12# examplesudo minicom -m -c on -C ./minicom_scp.txt -s Reference","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"common-tools","slug":"Linux/common-tools","permalink":"http://yoursite.com/categories/Linux/common-tools/"}]},{"title":"CentOS Java","date":"2019-02-23T10:45:46.000Z","path":"wiki/Linux/CentOS/java/","text":"How-to Install JDK-1.8When you install the development group packages, the jdk-1.8.0 installed by default. system parameters:123uname -a&gt;&gt; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux Reference","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS opengrok","date":"2019-02-23T10:17:01.000Z","path":"wiki/Linux/CentOS/opengrok/","text":"Install OpenJDKinstall by yum1sudo yum -y install java-1.8.0-openjdk java-1.8.0-openjdk-devel location:1dirname $(readlink $(readlink $(which java))) Install OpenGrok dockerinstall docker click here 1sudo docker pull krazakee/opengrok #pull a opengrok-repo Privatize the JDK To the User DirectoryNOTE: please copy all files to path you want, not Link filesso you should do this with ‘-L’ option:1bash cp -arL `dirname $(readlink $(readlink $(which java)))` /path/to/jvm Make Scriptrun docker daemon for opengrok12345docker run -it -d --name openg \\ -p 8111:8080 \\ -v /path/to/jvm:/usr/lib/jvm \\ -v /path/to/opengrok/data:/var/opengrok:delegated \\ -w /app krazakee/opengrok update index DB-data1docker exec openg bash -c \"/reindex.sh\" NOTE: your source code should be put to /path/to/opengrok/data/src/ for example:12345cd /path/to/opengrok/data/src/flaskgit clone https://github.com/pallets/flask.gitdocker exec openg bash -c \"/reindex.sh\" Reference Good Blog form zhihu","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS Docker","date":"2019-02-23T10:10:11.000Z","path":"wiki/Linux/CentOS/docker/","text":"How-to Install Dockersystem parameters:123uanme -a&gt;&gt; Linux localhost.localdomain 3.10.0-957.el7.x86_64 #1 SMP Thu Nov 8 23:39:32 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux steps:123456789# instsall easilyyum -y install docker# start serviceservice docker start# verifydocker run hello-world Reference Good Blog for docker installation","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS Git","date":"2019-02-22T14:09:01.000Z","path":"wiki/Linux/CentOS/git/","text":"How-to Install The Latest VersionIf you want get the latest version of git tools on CentOS, the one method of all is compile with source code.git repository Here are steps of installing git tools. Install Development Groups Tools12sudo yum groups list # querysudo yum group install 'Development and Creative Workstation' Remove Old Version Git From System1sudo yum remove git Maybe Other DependenceMaybe some other tools should be installed:1234567891011sudo yum install curl-devel \\ expat-devel \\ gettext-devel \\ openssl-devel \\ zlib-devel \\ gcc \\ perl-ExtUtils-MakeMaker \\ docbook2X.x86_64 \\ curl-devel \\ openssl-devel \\ asciidoc.noarch Download Source Codedownload source code methods as below: clone source code from Github: 1git clone https://github.com/git/git.git # to current dir get source code zip-file from Github: 1wget https://github.com/git/git/archive/master.zip # to current dir Compile Source Code and Install1sudo make prefix=/usr install install-doc install-html install-info ;# as root official installation documentation Verify1git --version Reference blog about install git from source code","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS Command Tools","date":"2019-02-18T08:26:44.000Z","path":"wiki/Linux/CentOS/common_tools/","text":"How-to install ‘ag’ On CentOSGood Answer From ZhiHu Reference","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"Centos Emacs","date":"2019-02-18T05:08:09.000Z","path":"wiki/Linux/CentOS/emacs/","text":"GoalsMainly explain the basic skills that should be mastered as a user (not a developer). RequirementsAs a coder (Emacs user), I have some requirements as below: I can record notes at any time to complete the daily accumulation. I can simply use the shell function in the editor. I can use the code jump function according to different language. I can use various query functions in a project with version control. I can use grep-like function without version control. I can use the code tagging feature to complete the documentation process. I can use Chinese input-method in any file. I can use version control functions, example: git. To be continue… NOTE: Use #NUM express requirement’s number. Meet Plugins or Built-in FunctionsEmacs provides built-in features or plugins that meet my requirements. IssueWhen you get the spacemacs.git master branch from GitHub, and install packages at first time, maybe you have a trouble same as ‘… name is missspelled?’ Fix it by booting with option ‘–insecure’For example: emacs –insecure Reference Emacs Home Spacemacs Home Emacs China Home Chen Bin Blog Good Blog For Installing Emacs by compiled","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS Chinese Inputmethod","date":"2019-02-18T04:39:10.000Z","path":"wiki/Linux/CentOS/chinese_inputmethod/","text":"Reference Get Easily","tags":[{"name":"chinese-inputmethod","slug":"chinese-inputmethod","permalink":"http://yoursite.com/tags/chinese-inputmethod/"}],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS Python Developemnt Environment","date":"2019-02-17T14:40:57.000Z","path":"wiki/Linux/CentOS/python/","text":"How-to Install Python3Reference Good blog about install python3 On CentOS How to install python virtual envs","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS Samba Service","date":"2019-02-17T14:36:25.000Z","path":"wiki/Linux/CentOS/samba/","text":"How-TO Install SambaReference Install Samba","tags":[{"name":"centos-samba","slug":"centos-samba","permalink":"http://yoursite.com/tags/centos-samba/"}],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS Neovim","date":"2019-02-17T14:36:16.000Z","path":"wiki/Linux/CentOS/neovim/","text":"Reference","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"CentOS RPM and YUM","date":"2019-02-17T14:35:23.000Z","path":"wiki/Linux/CentOS/rpm_and_yum/","text":"Reference","tags":[],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"CentOS","slug":"Linux/CentOS","permalink":"http://yoursite.com/categories/Linux/CentOS/"}]},{"title":"FireFox Usage and Configuration","date":"2019-02-10T16:00:00.000Z","path":"wiki/Linux/firefox/firefox/","text":"FireFoxUsageMaybe, here should be used to record some tips for firefox. ConfigurationFireFox Flash Plugin on [Ubuntu]On ubuntu (version == 18.04), we had test and follow us:1sudo apt install flashplugin-installer Reference How to install firefox flash plugin","tags":[{"name":"firefox","slug":"firefox","permalink":"http://yoursite.com/tags/firefox/"}],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"firefox","slug":"Linux/firefox","permalink":"http://yoursite.com/categories/Linux/firefox/"}]},{"title":"Multiple SSH KEYs on The Same Computer","date":"2019-02-10T16:00:00.000Z","path":"wiki/Linux/ssh/ssh-key/","text":"需求分析有时候，可能需要在github上创建不同的帐户（虽然是很小的概率），但如果你的主机上只有一个sshkey，就会出现问题。 问题在于这个github会查询sshkey的唯一性，并告诉你这个sshkey已经存在了。 这个时候同一台机器创建不同的sshkey就有必要了。 具体操作步骤任何的操作步骤都会有假设的前提。 我们假设现在你的主机还没有配置sshkey 1. 为本地主机创建多个sshkey1234ssh-keygen -t rsa -C \"youremail@temp.com\"&gt; -t 为参数类型&gt; -C 关联邮件 这个步骤中，会要求你配置文件的位置和名称，注意并正确填写。 对应标题，我们需要假设需要在本地创建两个sshkey达到目的，所以需要执行两次上述命令。 注意，执行上述命令的时候，配置的文件应该是不同的。 现在，已经有了两个不同的sshkey在~/.ssh/目录下。查看目录结构： 1ls -l ~/.ssh/ 2. 配置ssh的config文件，并关联不同帐户查看ssh的手册可以发现下面的内容：12345# man ssh &amp;&amp; grep configfile -F configfile Specifies an alternative per-user configuration file. If a configuration file is given on the command line, the system-wide configuration file (/etc/ssh/ssh_config) will be ignored. The default for the per-user configuration file is ~/.ssh/config. 在~/.ssh/下创建config文件并添加配置信息。 1$ touch ~/.ssh/config 使用编辑器完成配置信息添加： 1$ vi ~/.ssh/config 配置信息样例如下：123456789Host github.com # 这个名字理论上可以随便配置，但最好配置有意义的内容，并且可以看到这个内容是区分不同sshkey的必要条件 HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/id_rsaHost my.github.com HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/my 3. 上传指定的sshkey到github上川sshkey到github也很容易，这个内容可以参考链接：GITHUB的SSHKEY的配置 4. 验证配置的内容是否生效验证指令很简单：12$ ssh -T git@my.github.com$ ssh -T git@github.com 如果出现Hi xxx!You’ve successfully authenticated 就说明连接成功了。 5. git仓库的配置需要知道的是，本地关于ssh的相关操作，都是基于本地的配置完成的。这很重要！ 这里需要注意的是，用户名和邮件的配置信息是需要使用git的指令完成配置的。用户信息可以是本地仓库的，也可以是针对个别用户的，也可以是全局的。具体的内容请参考：git config 配置 如果想要免密操作，那么clone自己的仓库就使用git协议，如：1git clone git@my.github.com:username/wiki.websit.git 如果仓库已经clone或者创建完成，那么可以修改本地的仓库完成配置，如：1234#更改[remote \"origin\"]项中的url中的(.git/config)#my.github.com 对应上面配置的host[remote \"origin\"] url = git@my.github.com:itmyline/blog.git 或者：123#在Git Bash中提交的时候修改remote$ git remote rm origin$ git remote add origin git@my.github.com:username/blog.git 扩展内容在使用hexo完成博客编写的时候，需要配置web中的 _config.yml文件的内容如下：123456...deploy: repo: git@cool.github.com:oamsocool/oamsocool.github.io.git type: git branch: master...","tags":[{"name":"ssh","slug":"ssh","permalink":"http://yoursite.com/tags/ssh/"}],"categories":[{"name":"Linux","slug":"Linux","permalink":"http://yoursite.com/categories/Linux/"},{"name":"ssh","slug":"Linux/ssh","permalink":"http://yoursite.com/categories/Linux/ssh/"}]},{"title":"Welcome Zthxxx's Wiki Site","date":"2017-01-21T17:55:57.000Z","path":"wiki/index/","text":"这是 zthxxx 的个人 Wiki 站点，主要记录一些自己总结的只言片语的零散知识点。 我一直觉得 知识不能碎片化，要结构化，于是希望寻找一种优雅的方式来管理我的知识。 先后了解或尝试过 OneNote、Evernote、Blog、Wiki 等方式，总结了一套觉得比较合理的知识获取吸收管理流程： 通过网页、RSS、微信等网络渠道作为知识获取来源。 通过笔记系统（手写笔记、OneNote、Evernote）初步筛选有价值有针对性的信息，收藏信息，分类整理，做读后要点笔记记录。 自己平时突然想到或总结的一两句话，或很零碎的点子、灵感，初步消化的内容，则用 Wiki 记录。 最后当 Wiki 在某版块有一定量后，将这方面笔记和 Wiki 中的内容重读，整理和提炼，二次消化精炼再加上自己的感悟和理解，写成文章发表在 博客 上。 在使用中，笔记系统 主大块信息的分类和整理，Wiki 主零碎知识的积累，而 博客 只在于 精。 Wiki 中某一版块刚建时，可能只有很少内容或者就一句话，但是通过这种使用流程，日积月累，这方面的事物接触得多了，零散的知识也就多了，那么 Wiki 中这个版块记录的内容也就会变多了，也就是通过积累，把原本大量碎片化的知识结构化整理起来了。 博客的目的是 分享和展示，分享自己的知识，展示自己的水平，需要放拿得出手的东西，因此不适合放碎片化的只言片语，更适合放 一个系列 的总结或者教程等，是一个十分成体系的知识平台。 当我尝试部署一个自己的 Wiki 系统时，又开始纠结于选择哪个 Wiki 系统。参考网上博客，实际部署和对比比较了几个时下流行的 Wiki 系统：MediaWiki, DokuWiki, MDwiki, TiddlyWiki, wiz, vimwiki, Simiki, Wikitten 等等。都不如人意，有些是部署麻烦复杂，有些是界面太丑，有些不能分级，有些分级不能展开，有些不能搜索，还有的甚至不是用的 Markdown 。。。 根据这些不算满意的使用体验，我总结整理了一下自己对于 个人 Wiki 的一些需求。 界面简洁美观，排版字体友好 支持多级分类 方便修改和更新内容 部署简单 分类目录可展开和收缩 展开分类时可查看该分类下所有文章 / 词条的标题 每篇文章 / 词条能添加多个分类 / 标签 Wiki 可支持引用内部链接 使用 Markdown 书写文章 / 词条 支持全文搜索（可搜索内容和标题） 在之前的使用中，Wikiteen 是最接近我需求的，但是仍然有一些条件不满足，比如部署和搜索。但是我个人比较喜欢 Wikitten 的样式。 于是最终我选择了仿照 Wikitten 的样式自己写这个基于 Hexo 的 Wiki 主题 hexo-theme-Wikitten，作为自己用的一套 Wiki 系统，基本实现了上述的需求。现在暂时自己用着，当然这个初步功能还很简单，后续也有一堆 Bug 和 TODO List 需要维护，欢迎有兴趣的提提 PR。","tags":[],"categories":[]}]}